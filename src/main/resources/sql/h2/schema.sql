drop table if exists mh_admin;
drop table if exists mh_banner;
drop table if exists mh_user_account;
drop table if exists mh_user_profile;
drop table if exists mh_house;
drop table if exists mh_image;

create table mh_admin (
	id bigint generated by default as identity,
	login_name varchar(64) not null unique,
	name varchar(64) not null,
	password varchar(255) not null,
	salt varchar(64) not null,
	roles varchar(255) not null,
	register_date timestamp not null,
	primary key (id)
);

create table mh_banner (
	id bigint generated by default as identity,
	url varchar(128) not null,
	create_time timestamp not null,
	primary key (id) 
);

create table mh_user_account (
    id bigint generated by default as identity,
    type smallint not null,
    username varchar(64) not null,
    password varchar(64) not null,
    salt varchar(64) not null,
    create_time timestamp not null,
    primary key (id)
);

create table mh_user_profile (
    id bigint generated by default as identity,
    nickname varchar(64) not null,
    telephone varchar(64) not null,
    realname varchar(64) not null,
    email varchar(64) not null unique,
    avatar varchar(64) not null,
    company varchar(1024) not null,
    primary key (id)
);

create table mh_house (
    id bigint generated by default as identity,
    code varchar(64) not null,
    address varchar(255) not null,
    price int not null,
    area int not null,
    bedrooms varchar(64) not null,
    open_time timestamp not null,
    last_update_time timestamp not null,
    lastd2upload_time timestamp not null,
    lastd3upload_time timestamp not null,
    bg_music varchar(64),
    cover_img varchar(128),
    package_url varchar(128),
    uid bigint not null,
    primary key (id)
);

create table mh_image (
    id bigint generated by default as identity,
    type smallint not null,
    url varchar(128),
    thumbnail varchar(128),
    name varchar(64) not null,
    sort int not null default(0),
    hid bigint not null,
    primary key (id)
);